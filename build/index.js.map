{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/blocks/hero/components/edit.js","webpack:///./src/blocks/hero/index.js","webpack:///./src/blocks/hero/styles/editor.scss","webpack:///./src/index.js","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"element\"]"],"names":["Edit","props","onTextChange","changes","Set","className","backgroundImage","backgroundSize","backgroundPosition","attributes","textString","registerBlockType","title","icon","category","keywords","type","source","selector","fontColor","edit","setAttributes","focus","value","color","save"],"mappings":"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","file":"index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp_custom_blocks\"] = window[\"webpackJsonp_custom_blocks\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/index.js\",\"style-index\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { registerBlockType } from \"@wordpress/blocks\";\n\n\nconst Edit = (props) => {\n    \n    function onTextChange(changes) {\n        props.Set\n    }\n\n    return (\n        <div className={className}\n            style={{\n                backgroundImage: `url('http://placehold.it/1440x700')`,\n                backgroundSize: 'cover',\n                backgroundPosition: 'center'\n            }}>\n            <div className=\"overlay\"></div>\n            <RichText\n                tagName=\"h2\"\n                className=\"content\" // adding a class we can target\n                value={attributes.textString}\n                onChange={props.onTextChange}\n                placeholder=\"Enter your text here!\"\n            />\n         </div>\n    );\n}\n\nexport default Edit;\n","import { registerBlockType } from \"@wordpress/blocks\";\nimport { useBlockProps, RichText, InspectorControls } from '@wordpress/block-editor';\nimport { ColorPicker } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\nimport './styles/editor.scss';\nimport './styles/style.scss';\n\nimport Edit from './components/edit';\n\n\n\nregisterBlockType('custom-blocks/hero-image', {\n    title: 'Hero Image',\n    icon: 'format-image',\n    category: 'custom-blocks',\n    keywords: [\n        'custom-blocks', 'hero', 'image'\n    ],\n    attributes: {\n        textString: {\n            type: 'array',\n            source: 'children',\n            selector: 'h2',\n        },\n        fontColor: {\n            type: 'string',\n        }\n    },\n    edit: (props) => {\n        const {\n            setAttributes,\n            attributes,\n            className,\n            focus\n        } = props;\n\n        const { fontColor } = props.attributes;\n\n        function onTextChange(changes) {\n            setAttributes({\n                textString: changes\n            });\n        }\n\n      \n        return (\n            <>\n            <InspectorControls>\n                <div>\n                        <strong>Select a font color:</strong>\n                        <ColorPicker\n                            color={ fontColor }\n                            onChangeComplete={ (value) => setAttributes({fontColor:value}) }\n                        />\n                </div>\n            </InspectorControls>\n             <div \n                className={className}\n                style={{\n                    backgroundImage: `url('http://placehold.it/1440x700')`,\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center'\n                }}>\n                <div className=\"overlay\"></div>\n                <RichText\n                    tagName=\"h2\"\n                    className=\"content\"\n                    value={attributes.textString}\n                    onChange={onTextChange}\n                    placeholder=\"Enter your text here\"\n                    style={{color: fontColor}}\n                />\n                </div>\n                </>\n         )\n    },\n    save: (props) => {\n        const { attributes, className } = props;\n        const { fontColor } = props.attributes;\n        return (\n            <div className={className}>\n                <div className=\"overlay\"></div>\n                <h2 className=\"content\" style={{color:fontColor}}>{attributes.textString}</h2>\n            </div>\n        )\n    },\n})","// extracted by mini-css-extract-plugin\nexport {};","/**\n * Import Blocks\n */\n\nimport './blocks/hero/index.js';","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());","(function() { module.exports = window[\"wp\"][\"components\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());"],"sourceRoot":""}